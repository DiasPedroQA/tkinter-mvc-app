name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build, Lint and Test (Python Matrix)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", 3.11]

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 💾 Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest pytest-cov flake8

      - name: 🔍 Run flake8 (não falha a build)
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        continue-on-error: true

      - name: ✅ Run tests with coverage
        run: |
          pytest --cov=. --cov-branch --cov-report=xml --junitxml=junit.xml
          coverage report --fail-under=80

      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          slug: DiasPedroQA/tkinter-mvc-app
          files: coverage.xml
          flags: unittests
          name: python-ci

      - name: 📄 Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: 🚀 Deploy to Server
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 📥 Checkout do código
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: 🚚 Deploy application
      #   env:
      #     DEPLOY_SERVER: ${{ secrets.DEPLOY_SERVER }}
      #     DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      #     DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      #   run: |
      #     echo "Deploying application..."
      #     ssh -i $DEPLOY_KEY $DEPLOY_USER@$DEPLOY_SERVER "mkdir -p /var/www/tkinter-mvc-app"
      #     rsync -avz --exclude '.git' ./ $DEPLOY_USER@$DEPLOY_SERVER:/var/www/tkinter-mvc-app
      #     echo "Deployment completed!"
